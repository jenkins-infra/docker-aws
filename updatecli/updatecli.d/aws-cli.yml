---
title: "Bump AWS CLI version"
sources:
  getAWSCliLatestRelease:
    kind: githubRelease
    name: Get the latest AWS CLI version
    spec:
      owner: "aws"
      repository: "aws-cli"
      token: "{{ requiredEnv .github.token }}"
      username: "{{ .github.username }}"
      versionFilter:
        kind: regex
        pattern: '2.(\d*).(\d*)' # Only the version 2.x.y has a Docker Image
conditions:
  testDockerfileArgAwsCliVersion:
    name: "Does the Docker Image exists with the found tag?"
    kind: dockerImage
    spec:
      image: "amazon/aws-cli"
  testDockerImageAwsCli:
    name: "Does the Dockerfile have an ARG instruction which key is AWS_CLI_VERSION?"
    kind: dockerfile
    spec:
      file: Dockerfile
      instruction:
        keyword: "ARG"
        matcher: "AWS_CLI_VERSION"
  testCstAwsClilangVersion:
    name: "Does the test harness checks for a label label io.jenkins-infra.tools.aws-cli.version?"
    kind: yaml
    spec:
      file: "cst.yml"
      key: "metadataTest.labels[1].key"
      value: io.jenkins-infra.tools.aws-cli.version
targets:
  updateCstAwsCliVersion:
    name: "Update the label io.jenkins-infra.tools.aws-cli.version in the test harness"
    sourceID: getAWSCliLatestRelease
    kind: yaml
    spec:
      file: "cst.yml"
      key: "metadataTest.labels[1].value"
    scm:
      github:
        user: "{{ .github.user }}"
        email: "{{ .github.email }}"
        owner: "{{ .github.owner }}"
        repository: "{{ .github.repository }}"
        token: "{{ requiredEnv .github.token }}"
        username: "{{ .github.username }}"
        branch: "{{ .github.branch }}"
  updateDockerfileArAwsCliVersion:
    name: "Update the value of AWS_CLI_VERSION in the Dockerfile"
    sourceID: getAWSCliLatestRelease
    kind: dockerfile
    spec:
      file: Dockerfile
      instruction:
        keyword: "ARG"
        matcher: "AWS_CLI_VERSION"
    scm:
      github:
        user: "{{ .github.user }}"
        email: "{{ .github.email }}"
        owner: "{{ .github.owner }}"
        repository: "{{ .github.repository }}"
        token: "{{ requiredEnv .github.token }}"
        username: "{{ .github.username }}"
        branch: "{{ .github.branch }}"
...
